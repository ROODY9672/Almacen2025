@model SIGLA.Business.Dto.Almacenessss.AlmacenesDto

@{
    ViewData["Title"] = "Extensions DataTables - Tables";
}

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-select-bs5/select.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-checkboxes-jquery/datatables.checkboxes.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-fixedcolumns-bs5/fixedcolumns.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-fixedheader-bs5/fixedheader.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/animate-css/animate.css" />
    <link rel="stylesheet" href="~/vendor/libs/sweetalert2/sweetalert2.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/vendor/libs/sweetalert2/sweetalert2.js"></script>

}

@functions {
    public string GetBadgeClassRol(string rol)
    {
        if (string.IsNullOrWhiteSpace(rol)) return "bg-label-secondary";

        return rol.Trim().ToLower() switch
        {
            "principal" => "bg-label-success",
            "sucursal" => "bg-label-warning",
            "almacenero" => "bg-label-primary",
            "cliente" => "bg-label-success",
            "supervisor" => "bg-label-primary",
            _ => "bg-label-secondary"
        };
    }
}


<style type="text/css">
    .table-red thead th {
        background-color: #D12222; /* Color rojo */
        color: white; /* Color del texto */
    }

    th {
        text-align: center;
    }

    .badge-amarillo {
        background-color: #FFFF00; /* Amarillo */
        color: #000000; /* Color de texto, ajusta según sea necesario */
    }

    .badge-rojo {
        background-color: #FF0000; /* Rojo */
    }

    .badge-naranja {
        background-color: #ff8000;
    }

    .badge-antiquewhite {
        background-color: antiquewhite;
    }

    .badge-negro {
        background-color: #000000;
    }

    .badge-azul {
        background-color: #3c44ff;
    }

    .badge-verdeesme {
        background-color: springgreen;
    }

    .badge-amarillooscuro {
        background-color: #f1b845;
    }

    .badge-morado {
        background-color: #e499e4;
    }

    .badge-celestePastel {
        background-color: #86c5f2;
    }

    .badge-RojoPastel {
        background-color: #f27da9;
    }

    .tableHead {
        text-align: center;
    }

    #TablaListadoProgramacionPL thead th {
        text-align: center;
    }

    .tableHead th {
        text-align: center;
    }

    .badge-VerdePastel {
        background-color: #d4f5d4;
        color: #28a745;
    }

    .badge-AmarilloPastel {
        background-color: #fff3cd;
        color: #f0ad4e;
    }

    .badge-LilaPastel {
        background-color: #eee9fe;
        color: #7a5ff4;
    }
</style>


@functions {
    string GetBadgeClass(string estadoDescripcion)
    {
        switch (estadoDescripcion)
        {
            case "Principal":
                return "badge-VerdePastel"; // Nueva clase para color amarillo
            case "Sucursal":
                return "badge-naranja"; // Nueva clase para color amarillo
            case "Vendedor":
                return "badge-AmarilloPastel";

            case "Almacenero":
                return "badge-celestePastel";
            case "Vendedors":
                return "badge-verdeesme";

            case "PENDIENTE FIN RAMPA":
                return "badge-amarillooscuro";
            case "CURSO":
                return "badge-warning";
            case "PENDIENTE SALIDA ALMACÉN":
                return "badge-naranja";
            case "INICIADO":
                return "badge-amarillo";
            case "SALIDA ALMACEN":
                return "badge-morado";
            case "EJECUCIÓN RAMPA":
                return "badge-negro";
            case "PRIMER PESAJE":
                return "badge-azul";
            default:
                return "badge-secondary"; // Puedes cambiar esto según tus necesidades
        }
    }
}


<div class="row gy-12">

    <div class="col-xl-12">
        <h6 class="text-muted">Almacenes  </h6>
        <div class="card text-center mb-4">
            <div class="card-header p-0">
                <div class="nav-align-top">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link d-flex flex-column gap-1 text-dark"
                               href="@Url.Action("RegistrarAlmacenes", "Almacenes")"
                               role="tab">
                                <i class="tf-icons ri-file-add-line"></i>
                                <span>Registro</span>
                            </a>
                        </li>



                        <li class="nav-item">
                            <a class="nav-link d-flex flex-column gap-1 active border-bottom border-primary text-primary"
                               href="@Url.Action("ListadoAlmacenes", "Almacenes")"
                               role="tab">
                                <i class="tf-icons ri-list-check"></i>
                                <span>Listado</span>
                            </a>
                        </li>

                    </ul>

                </div>
            </div>
            <div class="card-body">
                <div class="tab-content pb-0">
                    <div class="tab-pane fade show active" id="navs-home-card" role="tabpanel">

                        <h5 class="card-header ">
                            <i class="ri-shield-user-line text-primary fs-4"></i>
                            Listado Almacenes
                        </h5>

                        <div class="card-body">


                            @using (Html.BeginForm("ListadoAlmacenes", "Almacenes", FormMethod.Post, new { @class = "row g-2 align-items-end mb-4" }))
                            {
                                <div class="form-group row g-3 align-items-center mb-3">
                                    <div class="col-auto d-flex align-items-center">
                                        <label for="FechaDesde" class="form-label mb-0 me-2" style="min-width: 120px;">Fecha Desde:</label>
                                        @Html.TextBoxFor(m => m.FechaDesde, new { @class = "form-control", type = "date" })
                                    </div>

                                    <div class="col-auto d-flex align-items-center">
                                        <label for="FechaHasta" class="form-label mb-0 me-2" style="min-width: 120px;">Fecha Hasta:</label>
                                        @Html.TextBoxFor(m => m.FechaHasta, new { @class = "form-control", type = "date" })
                                    </div>

                                    <div class="col-auto">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="ri-search-eye-line"></i> Buscar
                                        </button>
                                    </div>
                                </div>





                                <hr class="my-12">

                                <div class="card">
                                    <div class="card-datatable table-responsive" style="overflow-x: auto;">
                                        <table id="Table_AlmacenesList" class="table table-bordered text-nowrap">
                                            <thead>
                                                <tr>

                                                    <th>Nombre Almacén </th>
                                                   
                                                    <th>Usuario Creación</th>
                                                    <th>Fecha Creación</th>

                                                    <th>Ver Foto</th>
                                                    <th>Editar  </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.lstCentroControl != null && Model.lstCentroControl.Any())
                                                {
                                                    foreach (var item in Model.lstCentroControl)
                                                    {
                                                        <tr>
                                                            <td>@item.NombreAlmacen</td>
                                                          

                                                    @*         <td class="text-start">
                                                                <div class="d-flex align-items-center">
                                                                    <img src="@Url.Action("ObtenerFotoPerfilSucursal", "Almacenes", new { EmpresaNo = item.AlmacenNo })"
                                                                         alt="Foto perfil"
                                                                         class="rounded-circle me-3"
                                                                         style="width: 40px; height: 40px; object-fit: cover;" />
                                                                    <div class="d-flex flex-column">
                                                                        <strong class="fw-semibold">@item.NombreAlmacen </strong>
                                                                        <small class="text-muted">@item.Direccion </small>
                                                                    </div>
                                                                </div>
                                                            </td> *@



                                                         

                                                            <td>@item.UsuarioCreacion</td>
                                                            <td>@item.FechaHoraCreacion </td>



                                                            <td class="text-center">
                                                                <a href="@Url.Action("GaleriaFotos", "Almaceneaas", new { id = item.AlmacenNo })"
                                                                   class="btn btn-icon btn-warning rounded-pill detalle-usuario-ver-foto"
                                                                   title="Ver galería de fotos">
                                                                    <i class="ri-camera-line ri-20px"></i>
                                                                </a>
                                                            </td>





                                                            <td class="text-center">
                                                                <button type="button"
                                                                        class="btn btn-icon btn-primary rounded-pill btn-editar"
                                                                        data-almacenno="@item.AlmacenNo">
                                                                    <span class="tf-icons ri-pencil-line ri-22px"></span>
                                                                </button>
                                                            </td>

 





                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>







                            }



                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>










@section PageScripts {
    <script>
        // Tabla principal en su propio $(document).ready
        $(document).ready(function () {
            $('#Table_AlmacenesList').DataTable({
                scrollY: '800px',
                scrollX: true,
                scrollCollapse: true,
                paging: true,
                autoWidth: false,
                responsive: false,
                order: [],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json'
                },
                dom: '<"row mb-2"<"col-md-6 text-start"l><"col-md-6 text-end"f>>' +
                    't' +
                    '<"row mt-2"<"col-md-6 text-start"i><"col-md-6 text-end"p>>'
            });
        });





           document.querySelectorAll('.btn-editar').forEach(function (element) {
            element.addEventListener("click", function (e) {
                e.preventDefault();

                var SucursalNo = this.getAttribute("data-sucursalno");

                // Redirigir al método EditarusuarioSucursal con el valor de UsuarioNo
                window.location.href = '@Url.Action("EditarSucursal", "Almacenes")' + '?SucursalNo=' + AlmacenNo;
            });
        });






              $(document).on('click', '.btn-eliminar-usuario', function () {
            var usuarioNo = $(this).data('id');
            var nombre = $(this).data('nombre');
            var apellido = $(this).data('apellido');
            var correo = $(this).data('correo');

            Swal.fire({
                title: '¿Estás seguro Eliminar?',
                       html: `
            <div style="text-align:center;">
                <strong>Nombre completo:</strong> ${nombre} ${apellido}<br>
                <strong>Correo:</strong> ${correo}<br><br>
                <strong> Será eliminado junto con sus Almacenes asociadas.</strong>
            </div>
        `,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar',
                customClass: {
                    confirmButton: 'btn btn-danger me-2',
                    cancelButton: 'btn btn-outline-secondary'
                },
                buttonsStyling: false
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("EliminarUsuario", "Ususssarios")',
                        type: 'POST',
                        data: { usuarioNo: usuarioNo },
                        success: function (data) {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Eliminado!',
                                    text: 'El usuario fue eliminado correctamente.',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error', data.error || 'No se pudo eliminar.', 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error', 'Ocurrió un error en el servidor.', 'error');
                        }
                    });
                }
            });
        });




    </script>
}















